// Mocks generated by Mockito 5.4.6 from annotations
// in mission100/test/services/billing_service_mock_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:in_app_purchase/in_app_purchase.dart' as _i3;
import 'package:mission100/models/subscription_tier.dart' as _i6;
import 'package:mission100/services/billing_service.dart' as _i2;
import 'package:mission100/services/subscription_service.dart' as _i5;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i7;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakePurchaseResult_0 extends _i1.SmartFake
    implements _i2.PurchaseResult {
  _FakePurchaseResult_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeVerificationResult_1 extends _i1.SmartFake
    implements _i2.VerificationResult {
  _FakeVerificationResult_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [BillingService].
///
/// See the documentation for Mockito's code generation for more information.
class MockBillingService extends _i1.Mock implements _i2.BillingService {
  MockBillingService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool get isInitialized => (super.noSuchMethod(
        Invocation.getter(#isInitialized),
        returnValue: false,
      ) as bool);

  @override
  bool get isAvailable => (super.noSuchMethod(
        Invocation.getter(#isAvailable),
        returnValue: false,
      ) as bool);

  @override
  List<_i3.ProductDetails> get products => (super.noSuchMethod(
        Invocation.getter(#products),
        returnValue: <_i3.ProductDetails>[],
      ) as List<_i3.ProductDetails>);

  @override
  _i4.Future<bool> initialize() => (super.noSuchMethod(
        Invocation.method(
          #initialize,
          [],
        ),
        returnValue: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);

  @override
  List<_i3.ProductDetails> getAvailableProducts() => (super.noSuchMethod(
        Invocation.method(
          #getAvailableProducts,
          [],
        ),
        returnValue: <_i3.ProductDetails>[],
      ) as List<_i3.ProductDetails>);

  @override
  _i3.ProductDetails? getProduct(String? productId) =>
      (super.noSuchMethod(Invocation.method(
        #getProduct,
        [productId],
      )) as _i3.ProductDetails?);

  @override
  _i4.Future<bool> purchaseSubscription(String? productId) =>
      (super.noSuchMethod(
        Invocation.method(
          #purchaseSubscription,
          [productId],
        ),
        returnValue: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);

  @override
  _i4.Future<void> restorePurchases() => (super.noSuchMethod(
        Invocation.method(
          #restorePurchases,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<bool> isSubscriptionActive(String? productId) =>
      (super.noSuchMethod(
        Invocation.method(
          #isSubscriptionActive,
          [productId],
        ),
        returnValue: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);

  @override
  void setPurchaseCallbacks({
    dynamic Function(_i3.PurchaseDetails)? onPurchaseCompleted,
    dynamic Function(String)? onPurchaseError,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #setPurchaseCallbacks,
          [],
          {
            #onPurchaseCompleted: onPurchaseCompleted,
            #onPurchaseError: onPurchaseError,
          },
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i4.Future<_i2.PurchaseResult> purchaseProduct(String? productId) =>
      (super.noSuchMethod(
        Invocation.method(
          #purchaseProduct,
          [productId],
        ),
        returnValue: _i4.Future<_i2.PurchaseResult>.value(_FakePurchaseResult_0(
          this,
          Invocation.method(
            #purchaseProduct,
            [productId],
          ),
        )),
      ) as _i4.Future<_i2.PurchaseResult>);

  @override
  _i4.Future<_i2.VerificationResult> verifyPurchase(dynamic purchaseDetails) =>
      (super.noSuchMethod(
        Invocation.method(
          #verifyPurchase,
          [purchaseDetails],
        ),
        returnValue:
            _i4.Future<_i2.VerificationResult>.value(_FakeVerificationResult_1(
          this,
          Invocation.method(
            #verifyPurchase,
            [purchaseDetails],
          ),
        )),
      ) as _i4.Future<_i2.VerificationResult>);
}

/// A class which mocks [SubscriptionService].
///
/// See the documentation for Mockito's code generation for more information.
class MockSubscriptionService extends _i1.Mock
    implements _i5.SubscriptionService {
  MockSubscriptionService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Stream<_i5.SubscriptionType> get subscriptionStream =>
      (super.noSuchMethod(
        Invocation.getter(#subscriptionStream),
        returnValue: _i4.Stream<_i5.SubscriptionType>.empty(),
      ) as _i4.Stream<_i5.SubscriptionType>);

  @override
  _i5.SubscriptionType get currentSubscription => (super.noSuchMethod(
        Invocation.getter(#currentSubscription),
        returnValue: _i5.SubscriptionType.free,
      ) as _i5.SubscriptionType);

  @override
  bool get isPremium => (super.noSuchMethod(
        Invocation.getter(#isPremium),
        returnValue: false,
      ) as bool);

  @override
  bool get isExpired => (super.noSuchMethod(
        Invocation.getter(#isExpired),
        returnValue: false,
      ) as bool);

  @override
  bool get isAdFree => (super.noSuchMethod(
        Invocation.getter(#isAdFree),
        returnValue: false,
      ) as bool);

  @override
  _i6.SubscriptionTier getCurrentTier() => (super.noSuchMethod(
        Invocation.method(
          #getCurrentTier,
          [],
        ),
        returnValue: _i6.SubscriptionTier.free,
      ) as _i6.SubscriptionTier);

  @override
  _i4.Future<void> setUserSignupDate(DateTime? signupDate) =>
      (super.noSuchMethod(
        Invocation.method(
          #setUserSignupDate,
          [signupDate],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> initialize() => (super.noSuchMethod(
        Invocation.method(
          #initialize,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> activateSubscription(String? productId) =>
      (super.noSuchMethod(
        Invocation.method(
          #activateSubscription,
          [productId],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> deactivateSubscription() => (super.noSuchMethod(
        Invocation.method(
          #deactivateSubscription,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  bool hasFeatureAccess(_i5.PremiumFeature? feature) => (super.noSuchMethod(
        Invocation.method(
          #hasFeatureAccess,
          [feature],
        ),
        returnValue: false,
      ) as bool);

  @override
  String getSubscriptionStatusText() => (super.noSuchMethod(
        Invocation.method(
          #getSubscriptionStatusText,
          [],
        ),
        returnValue: _i7.dummyValue<String>(
          this,
          Invocation.method(
            #getSubscriptionStatusText,
            [],
          ),
        ),
      ) as String);

  @override
  String getSubscriptionDetailsText() => (super.noSuchMethod(
        Invocation.method(
          #getSubscriptionDetailsText,
          [],
        ),
        returnValue: _i7.dummyValue<String>(
          this,
          Invocation.method(
            #getSubscriptionDetailsText,
            [],
          ),
        ),
      ) as String);

  @override
  bool shouldShowRenewalReminder() => (super.noSuchMethod(
        Invocation.method(
          #shouldShowRenewalReminder,
          [],
        ),
        returnValue: false,
      ) as bool);

  @override
  List<String> getSubscriptionBenefits() => (super.noSuchMethod(
        Invocation.method(
          #getSubscriptionBenefits,
          [],
        ),
        returnValue: <String>[],
      ) as List<String>);

  @override
  bool checkUsageLimit(
    _i5.UsageType? usageType,
    int? currentUsage,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #checkUsageLimit,
          [
            usageType,
            currentUsage,
          ],
        ),
        returnValue: false,
      ) as bool);

  @override
  _i4.Future<_i5.UserSubscription?> getCurrentSubscription() =>
      (super.noSuchMethod(
        Invocation.method(
          #getCurrentSubscription,
          [],
        ),
        returnValue: _i4.Future<_i5.UserSubscription?>.value(),
      ) as _i4.Future<_i5.UserSubscription?>);

  @override
  _i4.Future<void> updateSubscriptionStatus(_i5.SubscriptionStatus? status) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateSubscriptionStatus,
          [status],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> preventAutoRenewal() => (super.noSuchMethod(
        Invocation.method(
          #preventAutoRenewal,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> updateSubscription({
    required String? productId,
    required dynamic purchaseDetails,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateSubscription,
          [],
          {
            #productId: productId,
            #purchaseDetails: purchaseDetails,
          },
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );
}
